//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace M4Data.UpgradeVersion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UpgradeVersion.UpgradeVersionSoap")]
    public interface UpgradeVersionSoap {
        
        // CODEGEN: Generating message contract since element name clientVersion from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUpgrade", ReplyAction="*")]
        M4Data.UpgradeVersion.CheckUpgradeResponse CheckUpgrade(M4Data.UpgradeVersion.CheckUpgradeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckUpgrade", ReplyAction="*")]
        System.Threading.Tasks.Task<M4Data.UpgradeVersion.CheckUpgradeResponse> CheckUpgradeAsync(M4Data.UpgradeVersion.CheckUpgradeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckUpgradeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckUpgrade", Namespace="http://tempuri.org/", Order=0)]
        public M4Data.UpgradeVersion.CheckUpgradeRequestBody Body;
        
        public CheckUpgradeRequest() {
        }
        
        public CheckUpgradeRequest(M4Data.UpgradeVersion.CheckUpgradeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CheckUpgradeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string clientVersion;
        
        public CheckUpgradeRequestBody() {
        }
        
        public CheckUpgradeRequestBody(string clientVersion) {
            this.clientVersion = clientVersion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckUpgradeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckUpgradeResponse", Namespace="http://tempuri.org/", Order=0)]
        public M4Data.UpgradeVersion.CheckUpgradeResponseBody Body;
        
        public CheckUpgradeResponse() {
        }
        
        public CheckUpgradeResponse(M4Data.UpgradeVersion.CheckUpgradeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CheckUpgradeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement CheckUpgradeResult;
        
        public CheckUpgradeResponseBody() {
        }
        
        public CheckUpgradeResponseBody(System.Xml.Linq.XElement CheckUpgradeResult) {
            this.CheckUpgradeResult = CheckUpgradeResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UpgradeVersionSoapChannel : M4Data.UpgradeVersion.UpgradeVersionSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpgradeVersionSoapClient : System.ServiceModel.ClientBase<M4Data.UpgradeVersion.UpgradeVersionSoap>, M4Data.UpgradeVersion.UpgradeVersionSoap {
        
        public UpgradeVersionSoapClient() {
        }
        
        public UpgradeVersionSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UpgradeVersionSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpgradeVersionSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpgradeVersionSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        M4Data.UpgradeVersion.CheckUpgradeResponse M4Data.UpgradeVersion.UpgradeVersionSoap.CheckUpgrade(M4Data.UpgradeVersion.CheckUpgradeRequest request) {
            return base.Channel.CheckUpgrade(request);
        }
        
        public System.Xml.Linq.XElement CheckUpgrade(string clientVersion) {
            M4Data.UpgradeVersion.CheckUpgradeRequest inValue = new M4Data.UpgradeVersion.CheckUpgradeRequest();
            inValue.Body = new M4Data.UpgradeVersion.CheckUpgradeRequestBody();
            inValue.Body.clientVersion = clientVersion;
            M4Data.UpgradeVersion.CheckUpgradeResponse retVal = ((M4Data.UpgradeVersion.UpgradeVersionSoap)(this)).CheckUpgrade(inValue);
            return retVal.Body.CheckUpgradeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<M4Data.UpgradeVersion.CheckUpgradeResponse> M4Data.UpgradeVersion.UpgradeVersionSoap.CheckUpgradeAsync(M4Data.UpgradeVersion.CheckUpgradeRequest request) {
            return base.Channel.CheckUpgradeAsync(request);
        }
        
        public System.Threading.Tasks.Task<M4Data.UpgradeVersion.CheckUpgradeResponse> CheckUpgradeAsync(string clientVersion) {
            M4Data.UpgradeVersion.CheckUpgradeRequest inValue = new M4Data.UpgradeVersion.CheckUpgradeRequest();
            inValue.Body = new M4Data.UpgradeVersion.CheckUpgradeRequestBody();
            inValue.Body.clientVersion = clientVersion;
            return ((M4Data.UpgradeVersion.UpgradeVersionSoap)(this)).CheckUpgradeAsync(inValue);
        }
    }
}
